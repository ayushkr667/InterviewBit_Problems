_____________________________________________________________________________
APPROACH 1:
_____________________________________________________________________________

int Solution::solve(vector<int> &A, int B) 
{
    if(A.empty())
        return 0;
    sort(A.begin(), A.end());

    int i=0;
    int j=0;
    while(i < A.size() && j < A.size())
    {
        int k = A[j] - A[i];
        if(k == B && i != j)
            return 1;
        else if(k < B)
            j++;
        else
            i++;
    }
    return 0;
}


________________________________________________________________________________
APPROACH 2:
________________________________________________________________________________

int Solution::solve(vector<int> &A, int B) 
{
    unordered_map<int,int> umap ;
    
    for (int i : A) {
        umap[i]++ ;
    }
    if (B==0) {
        for (int i : A)
            if (umap[i]>1)
                return 1 ;
        return 0 ;
    }
    for (int i : A) {
        if ( umap[i-B]>0  || umap[i+B]>0) {
            return 1 ;
        }
    }
    return 0 ;
}
