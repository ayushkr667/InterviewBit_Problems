_________________________________________________________________
APPROACH 1:
_________________________________________________________________
int Solution::solve(int A, vector<int> &B) 
{
    int count = 0;
    
    int sum = 0;
    for(int i = 0; i<A; i++)
    {
        sum+=B[i];
    }
    if( sum%3 != 0 )
        return 0;
        
    int req = sum/3;
    sum = 0;
    vector<int> temp(A, 0);
    for( int i=A-1; i>=0; i--)
    {
        sum+=B[i];
        if(sum == req)
            temp[i] = 1;
    }
    
    sum = 0;
    for(int i=0; i<A; i++)
    {
        sum+=B[i];
        if( sum == req )
        {
            for( int j = i+2; j<A; j++)
            {
                if(temp[j] == 1)
                {
                    count+=1;
                }
            }
        }
    }
    
    return count;
}
_____________________________________________________________________
APPROACH 2:
_____________________________________________________________________


int Solution::solve(int A, vector<int> &B) 
{
    int sum = 0;
    for(int i = 0; i < A; i++) sum += B[i];
    if(sum % 3 != 0 ) return 0;
    int sum13rd = sum/3;
    int sum23rd = 2 * sum13rd;
    int currSum = 0;
    int g13rd = 0;
    int count = 0;
    for(int i = 0; i < A - 1; i++) {
        currSum += B[i];
        if(currSum == sum23rd) count += g13rd;
        if(currSum == sum13rd) g13rd++;
    }
    //rumming till only A-1 is important for sum = 0. nd so is order of g13rd++.
    return count;
}
