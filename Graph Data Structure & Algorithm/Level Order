/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
vector<vector<int> > Solution::levelOrder(TreeNode* A) {
    vector<vector<int>> res;
    vector<int> ith_level;
    
    if(A == NULL){
        return res;
    }
    
    queue<TreeNode*> q;
    q.push(A);
    
    while(!q.empty()){
        int len = q.size(); //no of nodes on that level
        
        while(len--){
            TreeNode* f = q.front();
            ith_level.push_back(f->val);
            q.pop();
        
            if(f->left != NULL){
                q.push(f->left);
            }
            if(f->right != NULL){
                q.push(f->right);
            }
        }
        res.push_back(ith_level);
        ith_level.clear();
    }
    
    return res;
}
