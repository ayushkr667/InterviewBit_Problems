vector<int> Solution::equal(vector<int> &A) 
{
    int n = A.size();
    for (int i=0; i<n-3; i++)           // A
        for (int j=i+1; j<n-1; j++)     // B
        {
            unordered_map<int, int> m;
            vector<int> v;
            for (int k=i+1; k<n; k++)   // D
            {
                if (k == j)
                    continue;
                    
                int srch = A[i]+A[j]-A[k];
                if (m.find(srch) != m.end())
                {
                    if (v.empty() || m[srch]<v[0])
                        v = {m[srch], k};
                }
                    
                // add to map
                if (m.find(A[k]) == m.end())
                    m[A[k]] = k;
            }
            
            if (!v.empty())
                return {i, j, v[0], v[1]};
        }
    return {};
}
