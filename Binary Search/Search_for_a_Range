vector<int> Solution::searchRange(const vector<int> &A, int B) 
{
    int n = A.size();
    int l = 0, r= n-1;
    int first  = -1, last = -1;
    //search for fist occurence
    while(l <= r)
    {
        int mid = l + (r - l)/2;
        if( A[mid] == B )
        {
            //IMPORTANT TO CHECK VALID INDEX
            if( (mid-1 >= 0) && A[mid-1] == B)
                r = mid - 1;
            else
            {
                first = mid;
                break;
            }
        }
        else if( A[mid] > B) 
            r = mid-1;
        else
            l = mid+1;
    }
    //search for last occurence
    l =0, r = n-1;
    while(l <= r)
    {
        int mid = l + (r - l)/2;
        if( A[mid] == B )
        {
            if( (mid+1 <= n-1)  &&  A[mid+1] == B)
                l = mid + 1;
            else
            {
                last = mid;
                break;
            }
        }
        else if( A[mid] > B) 
            r = mid-1;
        else
            l = mid+1;
    }
    vector<int> res(2);
    res[0] = first;
    res[1] = last;
    return res;
}
